<?phpnamespace CafeteriasBA\Models;use CafeteriasBA\Interfaz\IMenu;use CafeteriasBA\DB\Conexion;use JsonSerializable;use PDO;use Exception;class Menu implements JsonSerializable, IMenu {        private $id;    protected $nombre;    protected $descripcion;        protected $id_cafeteria;        protected $precio;        protected $status;        protected $nombrecafeteria;                 /**     * Cafeteria constructor.     * @param $id     */    public function __construct($id = null) {        if (!is_null($id)) {            $this->findByPk($id);        }    }              /**     * Set Load Data : Carga los campos de la clase usuario.     * @param $fila     */    protected function loadData($fila) {        $this->setId($fila['id']);        $this->setNombre($fila['nombre']);        $this->setDescripcion(htmlentities($fila['descripcion']));        $this->setId_cafeteria($fila['id_cafeteria']);        $this->setPrecio($fila['precio']);        $this->set_status($fila['status']);                if(isset($fila['nombrecafeteria'])){                      $this->set_nombrecafeteria($fila['nombrecafeteria']);                    }    }        function jsonSerialize() {        // TODO: Implement jsonSerialize() method.        return [            'id' => $this->id,            'nombre' => $this->nombre,            'descripcion' => $this->descripcion,            'precio' => $this->precio,            'id_cafeteria' => $this->id_cafeteria,                        'status' => $this->status,                            'nombrecafeteria' => htmlentities($this->nombrecafeteria)          ];    }                  /**     * @param $id     */    public function findByPk($id) {                $query = "SELECT * FROM t_menu_cafeteria WHERE id = ?";        $stmt = Conexion::getStatement($query);        $stmt->execute([$id]);        $salida = [];        while ($fila = $stmt->fetch(PDO::FETCH_ASSOC)) {            $menu = new Menu();            $menu->setId($fila['ID_cafeteria']);            $menu->loadData($fila);            $salida[] = $menu;        }        return $salida;        }            /**     * Obtiene menu de las cafeterias segun su id     * @param int $id     * @return array     */         public function findByFKCafeteria($id) {                $query = "SELECT * FROM t_menu_cafeteria WHERE id_cafeteria = ? and status = 'activo' order by id desc";        $stmt = Conexion::getStatement($query);               $stmt->execute(array($id));                while ($fila = $stmt->fetch(PDO::FETCH_ASSOC)) {            $menu = new Menu();              $menu->LoadData($fila);                  $salida[] = $menu;        }                if(isset($salida)){            return($salida);        }    }                   /**     * @return array     */    public function getAll() {        // TODO: Implement getAll() method.        $query = "SELECT t_menu_cafeteria.* ,t_cafeteria.nombre as nombrecafeteria  FROM t_menu_cafeteria         JOIN t_cafeteria on  t_menu_cafeteria.id_cafeteria = t_cafeteria.`ID_cafeteria`";                    $stmt = Conexion::getStatement($query);              $stmt->execute();               while ($fila = $stmt->fetch(PDO::FETCH_ASSOC)) {            $menu = new Menu();            $menu->LoadData($fila);            $salida[] = $menu;        }                return $salida;    }             /***     * Crea un menu de cafeteria     * @param $data     * @return bool     * @throws Exception     */    public  function crearMenu($data) {        $query = "INSERT INTO t_menu_cafeteria (               nombre,               descripcion,               id_cafeteria ,               precio ,               status  ) VALUES (               :nombre,               :descripcion,               :id_cafeteria ,               :precio ,               :status  )";               $status = 'activo';                $stmt = Conexion::getStatement($query);               $exito = $stmt->execute([            'nombre' => $data['nombre'],            'descripcion' => $data['descripcion'],            'id_cafeteria' => $data['id_cafeteria'],            'precio' => $data['precio'],            'status' => $status                    ]);                if ($exito) {            return true;        } else {            throw new Exception('No se puedo cargar menu.');        }    }             /**     * @param $data     * @return Cafeteria     * @throws Exception     */    public function editarMenu($data) {        // TODO: Implement editarCafeteria() method.        $query = "UPDATE t_menu_cafeteria SET        nombre=:nombre,        descripcion=:descripcion,	id_cafeteria=:id_cafeteria,        precio=:precio,        status=:status        WHERE id= ".$data['id'];        $stmt = Conexion::getStatement($query);        $exito = $stmt->execute([            'nombre' => $data['nombre'],            'descripcion' => $data['descripcion'],            'id_cafeteria' => $data['id_cafeteria'],            'precio' => $data['precio'],            'status' => 'activo'        ]);        if ($exito) {          return true;        } else {            throw new Exception('No se ha podido editar la cafeteria.');        }    }             /**     * @param $data     * @return Cafeteria     * @throws Exception     */    public function delete($id) {        // TODO: Implement editarCafeteria() method.        $query = "delete from t_menu_cafeteria  WHERE id= ".$id;        $stmt = Conexion::getStatement($query);        $exito = $stmt->execute([]);        if ($exito) {          return true;        } else {            throw new Exception('No se ha podido eliminar el menu.');        }    }        /***************SETTERS Y GETTERS *********************/        function getId() {        return $this->id;    }    function getNombre() {        return $this->nombre;    }    function getDescripcion() {        return $this->descripcion;    }    function getId_cafeteria() {        return $this->id_cafeteria;    }    function getPrecio() {        return $this->precio;    }    function setId($id) {        $this->id = $id;    }    function setNombre($nombre) {        $this->nombre = $nombre;    }    function setDescripcion($descripcion) {        $this->descripcion = $descripcion;    }    function setId_cafeteria($id_cafeteria) {        $this->id_cafeteria = $id_cafeteria;    }    function setPrecio($precio) {        $this->precio = $precio;    }        function set_status($status) {        $this->status = $status;    }    function get_status() {         return $this->status;    }            function get_nombrecafeteria() {         return $this->nombrecafeteria;    }        function set_nombrecafeteria($nombrecafeteria) {        $this->nombrecafeteria = $nombrecafeteria;    }        }